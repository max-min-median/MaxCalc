area(a, b, c) = a * b * sin c / 2
binomcdf(n, p, a, b = -1) = b == -1 ? binomcdf(n, p, 0, a) : binompdf(n, p, a) + ((b > a) && binomcdf(n, p, a + 1, b))
binompdf(n, p, x = -1) = x == -1 ? map(x => binompdf(n, p, x))(range(0, n + 1)) : nCx p^x (1 - p)^(n - x)
collatz(n) = n > 1 ? 1 + (n % 2 ? collatz(3n + 1) : collatz(n/2)) : 0
cosAngle(a, b, c) = acos((b^2 + c^2 - a^2) / (2 * b * c))
cosRule(a, b, angle) = sqrt(a^2 + b^2 - 2 * a * b cos angle)
grad(f) = x => {alpha = 0.0000000001; (f(x + alpha) - f(x - alpha)) / 2alpha}
hero(a, b, c) = {s = (a + b + c) / 2; sqrt(s(s - a)(s - b)(s - c))}
poisscdf(lambda, a, b = -1) = b == -1 ? poisscdf(lambda, 0, a) : poisspdf(lambda, a) + (b > a ? poisscdf(lambda, a + 1, b) : 0)
poisspdf(lambda, x) = e^-lambda lambda^x / x!
polar(x) = (abs(x), arg(x))
quad(a, b, c) = {sqrtD = sqrt(b^2 - 4ac); ((-b - sqrtD)/2a, (-b + sqrtD)/2a)}
simul(a, b, c, d, e, f) = ((bf - ce)/(bd - ae), (cd - af)/(bd - ae))
fib(n, a = 1, b = 0) = n == 0 ? b : fib(n - 1, b, a + b)
luhn(n, q = 1) = {d = n % 10; n ? (q ? d : 2d > 9 ? 2d - 9 : 2d) + luhn(n // 10, 1 - q) : 0}
ceil(n) = n // 1 + (n % 1 > 0)
floor(n) = n // 1
parseBin(n, acc = 0, base = 1) = n ? parseBin(n // 10, acc + base * (n % 10), base * 2) : acc
bin(n, bits = 32) = binHelper(n + (n < 0) * 2^bits, bits - 1, 0)
binHelper(n, p, res) = {c = n // 2^p; p ? binHelper(n - c * 2^p, p - 1, 10res + c) : 10res + c}
proj(u, v) = (u.v) / (v.v) v
scalarMult(k, (a, b, c, d)) = (ka, kb, kc, kd)
root(f, a, b, inc = (b - a)/1000, delta = delta, h = f(b)) = f(a) * h < 0 ? rootFind(f, a, b, delta, f(a), h) : a + inc < b ? root(f, a + inc, b, inc, delta) : ()
rootFind(f, a, b, delta, l = f(a), h = f(b), m = f((a + b)/2)) = b - a <* delta ? (a + b)/2 : m * l <* 0 ? rootFind(f, a, (a + b)/2, delta, l, m) : rootFind(f, (a + b)/2, b, delta, m, h)
integHelper(f, a, b, dx) = a >= b ? f(b) : f(a) + integHelper(f, a + dx, b, dx)
integrate(f, a, b, dx = (b - a)/100) = dx/2 * (f(a) + 2 * integHelper(f, a + dx, b - dx, dx))
gini(a, b, c) = {tot = a + b + c; (a(tot - a) + b(tot - b) + c(tot - c)) / tot^2}
log(a, b) = ln(b)/ln(a)
cpd(prin, I, t) = prin(1 + I)^t
gcd(a, b) = a ? gcd(b % a, a) : b
summation(f, l, u) = l <= u ? f(l) + summation(f, l + 1, u) : 0
binCoeff(a, b, n, r = 0) = r > n ? () : (nCr * a^(n - r) * b^r:) <+> binCoeff(a, b, n, r + 1)
gym(a, b = 0, c = 0, d = 0, q = 0) = (45 + 2(45a + 25b + 10c + 5d + 2.5q)) lbToKg
sumOfRoots(a, b, c) = {q = quad(a, b, c); q @ 0 + q @ 1}
map = f => v => v$ ? (f(v @ 0):) <+> map(f)(1 </ v) : ()
reduce = f => (v, a = 0) => v$ ? reduce(f)(1 </ v, f(a, v @ 0)) : a
transpose(m, result = (), col = (), r = 0, c = 0) = result$ == (m @ 0)$ ? result : r == m$ ? transpose(m, result <+> (col:), (), 0, c + 1) : transpose(m, result, col <+> (m @ r @ c:), r + 1, c)
matrixMult(A, B) = {B = transpose(B); (helper(result = (), row = (), r = 0, c = 0) = r == A$ ? result : c == B$ ? helper(result <+> (row:), (), r + 1, 0) : helper(result, row <+> ((A @ r).(B @ c):), r, c + 1))()}
filter = pred => v => v$ ? (pred(v @ 0) ? (v @ 0:) : ()) <+> filter(pred)(1 </ v) : ()
sum = (v, a = 0) => {{f = (x, y) => x + y}} v$ ? reduce(f)(1 </ v, f(a, v @ 0)) : a
fibSequence(n, result = (1, 1)) = result$ >= n ? n /> result : fibSequence(n, result <+> (sum(result </ 2):))
norm(v) = sqrt(v.v)
stdDev(v) = sqrt(var(v))
euler(grad, (x, y), endX, stepSize, thisGrad = grad(x, y), thisRow = ((x, y, thisGrad):)) = x >= endX ? thisRow : thisRow <+> euler(grad, (x + stepSize, y + thisGrad * stepSize), endX, stepSize)
vecAngle(u, v) = acos(u.v / norm(u)norm(v))
unitVec(v) = v/norm(v)
range(a, b = 9.87E99, step = sgn(b - a)) = {b == 9.87E99 && ((a, b) = (0, a)); h(x, y, st, res = ()) = sgn(y - x) == sgn(st) ? h(x + st, y, st, res <+> (x:)) : res; h(a, b, step)}
collatzSeq = n => map(collatz)(range(1, n + 1))
compose = g => f => x => f(g(x))
repeat(n) = helper(ch, i = 0) = i == n ? () : (ch:) <+> helper(ch, i + 1)
grid = n => ch => repeat(n)(repeat(n)(ch))
rej(u, v) = v - proj(u, v)
graph(f) = map(x => (x, f(x)))
helper(ch, i = 0) = {{repeat(n) = helper(ch, i = 0) = i == n ? () : (ch:) <+> helper(ch, i + 1); n = 5}} i == n ? () : (ch:) <+> helper(ch, i + 1)
divMod(n, d) = (n // d, n % d)
sigma(f, l, u) = f(l) + (l < u ? sigma(f, l + 1, u) : 0)
table = graph(f) = map(x => (x, f(x)))
angle(x) = polar(x) @ 1
geopdf(p, x) = (1 - p)^(x - 1) * p
geocdf(p, a, b = -1) = b == -1 ? geocdf(p, 1, a) : (1 - p)^(a - 1) - (1 - p)^b
vecGetPointOnPlane((n, d)) = n @ 0 != 0 ? (d/(n @ 0), 0, 0) : n @ 1 != 0 ? (0, d/(n @ 1), 0) : (0, 0, d/(n @ 2))
vecFOPtoLine(p, (a, d)) = a + proj(p - a, d)
vecFOPtoPlane(p, (n, d)) = {a = vecGetPointOnPlane((n, d)); p + proj(a - p, n)}
vecPlane3Points(p, q, r) = {n = (q - p)><(r - p); (n, p.n)}
vecDistPointToLine(p, (a, d)) = norm((p - a)><d)/norm(d)
vecDistPointToPlane(p, (n, d)) = abs((vecGetPointOnPlane((n, d)) - p).n)/norm(n)
vecDistPlaneToPlane((n1, d1), (n2, d2)) = n1><n2 != (0, 0, 0) ? () : vecDistPointToPlane(vecGetPointOnPlane((n1, d1)), (n2, d2))
hyperGeom = (a, b) => (x, y) => (aCx)(bCy) / ((a + b)C(x + y))
vecPlaneFromParametric(a, p, q) = {n = p><q; (n, a.n)}
sumAP(a, d, n) = n/2 (2a + (n - 1)d)
radixToDec(radix) = h(n, acc = 0, base = 1) = n ? h(n // 10, acc + base * (n % 10), base * radix) : acc
f(x) = 36(cosx * (1 + cosx) + sinx (-sinx))
f_inv(x) = (x - 1)/2
T(n) = 95.676n + n(n - 1)/2 * 0.049396
average(vals, freqs) = vals.freqs / sum(freqs)
meanAndVar(vals, freqs = (-1:)) = {freqs == (-1:) ? freqs = map(x => 1)(vals) : (); a = vals.freqs; b = map(x => x^2)(vals).freqs; n = sum(freqs); (m = a/n, b/n - m^2)}
ans = 21434/539827
deg = 367659/21065309
toDeg = 1204537366/21023143
lbToKg = 200/441
delta = 1/10000000000
x1 = -190174216/52212749
x2 = 38139656/42743343
x = 8459361/18819920
